security:
  encoders:
    App\Entity\User:
      algorithm: bcrypt
  role_hierarchy:
    ROLE_WRITER: ROLE_USER
    ROLE_ADMIN: ROLE_WRITER
  providers:
    database:
      entity:
        class: App\Entity\User
        property: username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: ~
      logout:
        path:   logout
        target: homepage

      # activate different ways to authenticate

      # http_basic: true
      # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

      json_login:
        check_path: login

      #      form_login:
#        login_path: login
#        username_parameter: username
#        password_parameter: password
#        csrf_token_generator: security.csrf.token_manager
#        check_path: /login_check

      # https://symfony.com/doc/current/security/form_login_setup.html

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }
