Mutation:
  type: object
  config:
    fields:
      addComment:
        access: '@=hasRole("ROLE_USER")'
        builder: 'Relay::Mutation'
        builderConfig:
          inputType: AddCommentInput
          payloadType: AddCommentPayload
          mutateAndGetPayload: '@=mutation("App\\GraphQL\\Mutation\\Comment\\AddCommentMutation", [value, getUser()])'
      addAnswerComment:
        access: '@=hasRole("ROLE_USER")'
        builder: 'Relay::Mutation'
        builderConfig:
          inputType: AddAnswerCommentInput
          payloadType: AddAnswerCommentPayload
          mutateAndGetPayload: '@=mutation("App\\GraphQL\\Mutation\\Comment\\AddAnswerCommentMutation", [value, getUser()])'
      deleteComment:
        access: '@=hasRole("ROLE_USER")'
        builder: 'Relay::Mutation'
        builderConfig:
          inputType: DeleteCommentInput
          payloadType: DeleteCommentPayload
          mutateAndGetPayload: '@=mutation("App\\GraphQL\\Mutation\\Comment\\DeleteCommentMutation", [value])'
      editFiction:
        access: '@=hasRole("ROLE_USER")'
        builder: 'Relay::Mutation'
        builderConfig:
          inputType: EditFictionInput
          payloadType: EditFictionPayload
          mutateAndGetPayload: '@=mutation("App\\GraphQL\\Mutation\\Fiction\\EditFictionMutation", [value, getUser()])'
      addFiction:
        access: '@=hasRole("ROLE_USER")'
        builder: 'Relay::Mutation'
        builderConfig:
          inputType: AddFictionInput
          payloadType: AddFictionPayload
          mutateAndGetPayload: '@=mutation("App\\GraphQL\\Mutation\\Fiction\\AddFictionMutation", [value, getUser()])'