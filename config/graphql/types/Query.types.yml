Query:
  type: object
  config:
    fields:
      node:
        builder: "Relay::Node"
        builderConfig:
          nodeInterfaceType: Node
          idFetcher: '@=resolver("App\\GraphQL\\Resolver\\GlobalIdResolver", [value])'
      viewer:
        access: '@=isAuthenticated()'
        type: User!
        description: The currently authenticated user
        resolve: '@=getUser()'
      fictionCategories:
        type: '[FictionCategory!]'
        description: The available list of fiction categories
        resolve: '@=resolver("App\\GraphQL\\Resolver\\Query\\FictionCategoriesResolver", [args])'
      fictions:
        description: Get all fictions.
        type: FictionConnection!
        argsBuilder: Relay::Connection
        resolve: '@=resolver("App\\GraphQL\\Resolver\\Query\\FictionsResolver", [args])'
        args:
          first:
            type: Int
            defaultValue: 20
          orderBy:
            type: FictionOrder
            defaultValue: { field: createdAt, direction: DESC }
